apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-auth
  template:
    metadata:
      labels:
        app: postgres-auth
    spec:
      containers:
        - name: postgres
          image: postgres:16
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_DB
              value: "hotel_auth_db_data"
          args:
            - "-c"
            - "max_connections=200"
            - "-c"
            - "shared_buffers=256MB"
            - "-c"
            - "effective_cache_size=1GB"
            - "-c"
            - "max_parallel_workers=4"
            - "-c"
            - "idle_in_transaction_session_timeout=60000"
          volumeMounts:
            - name: postgres-auth-storage
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
      volumes:
        - name: postgres-auth-storage
          persistentVolumeClaim:
            claimName: postgres-auth-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-auth-service
spec:
  selector:
    app: postgres-auth
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 31032    # уникальный NodePort
  type: NodePort
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-auth-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi



## Создаем PostgreSQL
#  kubectl apply -f postgres.yaml
#
#  # Создаем приложение
#  kubectl apply -f deployment.yaml
#
#  # Проверяем статус
#  kubectl get pods
#  kubectl get services

## Проверим, что pod удален
#  kubectl get pods
#  kubectl get deployments
#  # или сокращенно
#  kubectl get deploy
#
#  # Удаляем deployment
#  kubectl delete deployment имя-деплоймента
#
#  # Пример:
#  kubectl delete deployment hotel-app