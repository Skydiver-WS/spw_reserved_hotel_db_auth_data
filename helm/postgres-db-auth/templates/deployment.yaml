apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgresql.name }}.deployment
  labels:
    app: {{ .Values.postgresql.name }}
    component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.postgresql.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgresql.name }}
        component: database
    spec:
      containers:
        - name: {{ .Values.postgresql.name }}
          image: {{ .Values.postgresql.image }}
          ports:
            - containerPort: {{ .Values.postgresql.port }}
          env:
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.name }}-secret
                  key: database-name
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.name }}-secret
                  key: username
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.name }}-secret
                  key: postgres-password
            - name: POSTGRESQL_ENCODING
              value: "{{ .Values.postgresql.encoding }}"
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/pgsql/data
            - name: postgresql-config
              mountPath: /opt/app-root/src/postgresql-cfg/
          resources:
            {{- toYaml .Values.postgresql.resources.deployment | nindent 12 }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -i
                - -c
                - psql -h 127.0.0.1 -U $POSTGRESQL_USER -d $POSTGRESQL_DATABASE -c 'SELECT 1'
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -i
                - -c
                - psql -h 127.0.0.1 -U $POSTGRESQL_USER -d $POSTGRESQL_DATABASE -c 'SELECT 1'
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
          securityContext:
              {{- toYaml .Values.postgresql.securityContext | nindent 12 }}
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: {{ .Values.postgresql.name }}-pvc
        - name: postgresql-config
          configMap:
            name: {{ .Values.postgresql.name }}-config